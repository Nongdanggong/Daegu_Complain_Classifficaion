{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"toc_visible":true,"authorship_tag":"ABX9TyNpnI6A7tDfSHwGnYiZIYnd"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"gpuClass":"standard"},"cells":[{"cell_type":"markdown","source":["## 구글 마운팅"],"metadata":{"id":"DfXHyICDjkdS"}},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6x1hCbyeX4dF","executionInfo":{"status":"ok","timestamp":1682941944252,"user_tz":-540,"elapsed":3079,"user":{"displayName":"김근영","userId":"15518782436185757366"}},"outputId":"24e2f667-083a-446a-d491-dadb11e08043"},"execution_count":55,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"markdown","source":["## 데이터 불러오기"],"metadata":{"id":"jm4lATNQjm7Z"}},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import joblib\n","from sklearn.metrics.pairwise import cosine_similarity\n","import warnings\n","warnings.filterwarnings(\"ignore\", category=DeprecationWarning)\n"],"metadata":{"id":"DjlVjAgvX34x","executionInfo":{"status":"ok","timestamp":1682941945849,"user_tz":-540,"elapsed":2,"user":{"displayName":"김근영","userId":"15518782436185757366"}}},"execution_count":56,"outputs":[]},{"cell_type":"code","execution_count":3,"metadata":{"id":"ombrmDg89ZZv","executionInfo":{"status":"ok","timestamp":1682929776860,"user_tz":-540,"elapsed":3,"user":{"displayName":"김근영","userId":"15518782436185757366"}}},"outputs":[],"source":["name_list = ['BukGu', 'DalseongGun', 'DalsuGu', 'DongGu', 'JungGu', 'NamGu', 'SeoGu', 'Suseonggu']\n","complain_list = []"]},{"cell_type":"code","source":[" def save():\n","    for i, v in enumerate(name_list):\n","        complain_list[i].to_csv(v + '.csv',index=False)"],"metadata":{"id":"peVTLLF-91ay","executionInfo":{"status":"ok","timestamp":1682929776860,"user_tz":-540,"elapsed":2,"user":{"displayName":"김근영","userId":"15518782436185757366"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["# 코랩 때문에 경로 추가\n","path = '/content/drive/MyDrive/Colab Notebooks/VALUE_UP공모전/통합본/'\n","def load():\n","    for i, v in enumerate(name_list):\n","        complain_list.append(pd.read_csv(path + v + '.csv'))"],"metadata":{"id":"qHi9uGyUX2q2","executionInfo":{"status":"ok","timestamp":1682929779538,"user_tz":-540,"elapsed":275,"user":{"displayName":"김근영","userId":"15518782436185757366"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["load()"],"metadata":{"id":"Jt5WrZ3oYW7f","executionInfo":{"status":"ok","timestamp":1682929784064,"user_tz":-540,"elapsed":3369,"user":{"displayName":"김근영","userId":"15518782436185757366"}}},"execution_count":6,"outputs":[]},{"cell_type":"markdown","source":["## Kiwi 설치"],"metadata":{"id":"_I6SpReNhzyY"}},{"cell_type":"code","source":["!pip install --upgrade pip\n","!pip install kiwipiepy"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":704},"id":"Y3DFvr9-jNbw","executionInfo":{"status":"ok","timestamp":1682929819444,"user_tz":-540,"elapsed":20086,"user":{"displayName":"김근영","userId":"15518782436185757366"}},"outputId":"30629bcf-3a23-4a66-ab8d-27064f8cb23b"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: pip in /usr/local/lib/python3.10/dist-packages (23.0.1)\n","Collecting pip\n","  Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.1/2.1 MB\u001b[0m \u001b[31m26.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: pip\n","  Attempting uninstall: pip\n","    Found existing installation: pip 23.0.1\n","    Uninstalling pip-23.0.1:\n","      Successfully uninstalled pip-23.0.1\n","Successfully installed pip-23.1.2\n","Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting kiwipiepy\n","  Downloading kiwipiepy-0.15.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.8 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.8/1.8 MB\u001b[0m \u001b[31m23.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting dataclasses (from kiwipiepy)\n","  Downloading dataclasses-0.6-py3-none-any.whl (14 kB)\n","Collecting kiwipiepy-model~=0.15 (from kiwipiepy)\n","  Downloading kiwipiepy_model-0.15.0.tar.gz (30.5 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m30.5/30.5 MB\u001b[0m \u001b[31m47.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from kiwipiepy) (1.22.4)\n","Building wheels for collected packages: kiwipiepy-model\n","  Building wheel for kiwipiepy-model (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for kiwipiepy-model: filename=kiwipiepy_model-0.15.0-py3-none-any.whl size=30602642 sha256=4bd6d77fd3d7828c294bb8acf77767e79fb6d6ca31d8e9a0848235be67d19339\n","  Stored in directory: /root/.cache/pip/wheels/f3/55/41/ca474338ece1bc4314b01445f64ff002d71e19df45575a16e2\n","Successfully built kiwipiepy-model\n","Installing collected packages: kiwipiepy-model, dataclasses, kiwipiepy\n","Successfully installed dataclasses-0.6 kiwipiepy-0.15.0 kiwipiepy-model-0.15.0\n","\u001b[33mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\u001b[0m\u001b[33m\n","\u001b[0m"]},{"output_type":"display_data","data":{"application/vnd.colab-display-data+json":{"pip_warning":{"packages":["dataclasses"]}}},"metadata":{}}]},{"cell_type":"code","source":["# 라이브러리 불러오기\n","from kiwipiepy import Kiwi\n","kiwi = Kiwi()"],"metadata":{"id":"AVGoG9xKjTHO","executionInfo":{"status":"ok","timestamp":1682929819879,"user_tz":-540,"elapsed":444,"user":{"displayName":"김근영","userId":"15518782436185757366"}}},"execution_count":10,"outputs":[]},{"cell_type":"markdown","source":["## kiwi 사용하기"],"metadata":{"id":"oyyqPOTykNkw"}},{"cell_type":"code","source":["# 리스트 형태로 변경 후\n","# kiwi tokenize 함수화\n","def kiwi_token(data):\n","    data['content'] = data['content'].astype('str').tolist()\n","    morph_kiwi = lambda x: kiwi.tokenize(x) if type(x) is str else None\n","    data['tokens'] = data['content'].apply(morph_kiwi)"],"metadata":{"id":"xCfDilYAshZs","executionInfo":{"status":"ok","timestamp":1682929819880,"user_tz":-540,"elapsed":2,"user":{"displayName":"김근영","userId":"15518782436185757366"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["for i in range(8):\n","    kiwi_token(complain_list[i])"],"metadata":{"id":"lJN6uOYfYyOr","executionInfo":{"status":"ok","timestamp":1682930626689,"user_tz":-540,"elapsed":806358,"user":{"displayName":"김근영","userId":"15518782436185757366"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["# 품사가 NNG, NNP, NNB, NR, NP, VV, VA, VCP, VCN 인 경우만 추출해서 새로운 컬럼으로 만들기기 함수화\n","def p_o_s(data):\n","    data['new_pos'] = None\n","    for i, row in data.iterrows():\n","        new_tokens = []\n","        for token in row['tokens']:\n","            if token[1] in ['NNG', 'NNP', 'NNB', 'NR', 'NP', 'VV', 'VA', 'VCP', 'VCN']:\n","                new_tokens.append(token[0])\n","        data.at[i, 'new_pos'] = new_tokens"],"metadata":{"id":"SKoJHVlLv1i8","executionInfo":{"status":"ok","timestamp":1682930626689,"user_tz":-540,"elapsed":10,"user":{"displayName":"김근영","userId":"15518782436185757366"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["for i in range(8):\n","    p_o_s(complain_list[i])"],"metadata":{"id":"SN6DRI9Zdbce","executionInfo":{"status":"ok","timestamp":1682930634466,"user_tz":-540,"elapsed":7786,"user":{"displayName":"김근영","userId":"15518782436185757366"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["for i in range(8):\n","    print(max([len(text) for text in complain_list[i]['new_pos']]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3hHjT5oTfqFM","executionInfo":{"status":"ok","timestamp":1682930634467,"user_tz":-540,"elapsed":18,"user":{"displayName":"김근영","userId":"15518782436185757366"}},"outputId":"d12cb031-440c-4d26-9853-797e4f3fd19d"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["15696\n","1262\n","1217\n","1396\n","1387\n","1250\n","1341\n","4929\n"]}]},{"cell_type":"markdown","source":["## X, y 나누기 & Train Test Split"],"metadata":{"id":"Rib_cf7swPQe"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split"],"metadata":{"id":"G_Fz2dTALVOV","executionInfo":{"status":"ok","timestamp":1682930634467,"user_tz":-540,"elapsed":17,"user":{"displayName":"김근영","userId":"15518782436185757366"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["# 구별로 df 나누기\n","BukGu = complain_list[0]\n","DalseongGun = complain_list[1]\n","DalsuGu = complain_list[2]\n","DongGu = complain_list[3]\n","JungGu = complain_list[4]\n","NamGu = complain_list[5]\n","SeoGu = complain_list[6]\n","Suseonggu = complain_list[7]"],"metadata":{"id":"fRA8zL9BhmkI","executionInfo":{"status":"ok","timestamp":1682930634467,"user_tz":-540,"elapsed":16,"user":{"displayName":"김근영","userId":"15518782436185757366"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["BukGu.shape, NamGu.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yY2SpSyVa1cr","executionInfo":{"status":"ok","timestamp":1682930634467,"user_tz":-540,"elapsed":16,"user":{"displayName":"김근영","userId":"15518782436185757366"}},"outputId":"499f0764-6d8d-4ebf-afae-8949e9e2f68f"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((6836, 4), (2398, 4))"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["# 모든 구 df 합치기\n","for i in range(0, 8):\n","    complain_list[0] = pd.concat([complain_list[0], complain_list[i]], join='inner', axis=0)"],"metadata":{"id":"g5_Haatstpsc","executionInfo":{"status":"ok","timestamp":1682930634467,"user_tz":-540,"elapsed":14,"user":{"displayName":"김근영","userId":"15518782436185757366"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["df = complain_list[0]"],"metadata":{"id":"9Vx1g9_sv-8F","executionInfo":{"status":"ok","timestamp":1682930634468,"user_tz":-540,"elapsed":15,"user":{"displayName":"김근영","userId":"15518782436185757366"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e-vcmdbqvlmw","executionInfo":{"status":"ok","timestamp":1682930634468,"user_tz":-540,"elapsed":15,"user":{"displayName":"김근영","userId":"15518782436185757366"}},"outputId":"a479a595-1977-482b-8c8a-9d157d63b958"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(39835, 4)"]},"metadata":{},"execution_count":21}]},{"cell_type":"markdown","source":["### 전체 df"],"metadata":{"id":"hrFH83puwIJp"}},{"cell_type":"code","source":["df_X = df.loc[:, 'new_pos']\n","df_y = df.loc[:, 'dept']\n","df_x_train, df_x_test, df_y_train, df_y_test = train_test_split(df_X, df_y, test_size=0.2, stratify=df_y, random_state=3)"],"metadata":{"id":"q8DA0lsXwLHi","executionInfo":{"status":"ok","timestamp":1682930634468,"user_tz":-540,"elapsed":13,"user":{"displayName":"김근영","userId":"15518782436185757366"}}},"execution_count":22,"outputs":[]},{"cell_type":"markdown","source":["### BukGu"],"metadata":{"id":"UOr6bSjuJEzO"}},{"cell_type":"code","source":["BukGu_X = BukGu.loc[:, 'new_pos']\n","BukGu_y = BukGu.loc[:, 'dept']\n","BukGu_x_train, BukGu_x_test, BukGu_y_train, BukGu_y_test = train_test_split(BukGu_X, BukGu_y, test_size=0.2, stratify=BukGu_y, random_state=3)"],"metadata":{"id":"w990l-gXKKJ7","executionInfo":{"status":"ok","timestamp":1682930634468,"user_tz":-540,"elapsed":13,"user":{"displayName":"김근영","userId":"15518782436185757366"}}},"execution_count":23,"outputs":[]},{"cell_type":"markdown","source":["### DalseongGun"],"metadata":{"id":"mC6K57wYJuaC"}},{"cell_type":"code","source":["DalseongGun_X = DalseongGun.loc[:, 'new_pos']\n","DalseongGun_y = DalseongGun.loc[:, 'dept']\n","DalseongGun_x_train, DalseongGun_x_test, DalseongGun_y_train, DalseongGun_y_test = train_test_split(DalseongGun_X, DalseongGun_y, test_size=0.2, stratify=DalseongGun_y, random_state=3)"],"metadata":{"id":"PhO7P2QsKMYl","executionInfo":{"status":"ok","timestamp":1682930634468,"user_tz":-540,"elapsed":13,"user":{"displayName":"김근영","userId":"15518782436185757366"}}},"execution_count":24,"outputs":[]},{"cell_type":"markdown","source":["### DalsuGu"],"metadata":{"id":"GgeihrWiJugR"}},{"cell_type":"code","source":["DalsuGu_X = DalsuGu.loc[:, 'new_pos']\n","DalsuGu_y = DalsuGu.loc[:, 'dept']\n","DalsuGu_x_train, DalsuGu_x_test, DalsuGu_y_train, DalsuGu_y_test = train_test_split(DalsuGu_X, DalsuGu_y, test_size=0.2, stratify=DalsuGu_y, random_state=3)"],"metadata":{"id":"YknoTSXvKM1J","executionInfo":{"status":"ok","timestamp":1682930634468,"user_tz":-540,"elapsed":13,"user":{"displayName":"김근영","userId":"15518782436185757366"}}},"execution_count":25,"outputs":[]},{"cell_type":"markdown","source":["### DongGu"],"metadata":{"id":"hMp1QcpyJumm"}},{"cell_type":"code","source":["DongGu_X = DongGu.loc[:, 'new_pos']\n","DongGu_y = DongGu.loc[:, 'dept']\n","DongGu_x_train, DongGu_x_test, DongGu_y_train, DongGu_y_test = train_test_split(DongGu_X, DongGu_y, test_size=0.2, stratify=DongGu_y, random_state=3)"],"metadata":{"id":"nafGbGzTKNSr","executionInfo":{"status":"ok","timestamp":1682930634469,"user_tz":-540,"elapsed":14,"user":{"displayName":"김근영","userId":"15518782436185757366"}}},"execution_count":26,"outputs":[]},{"cell_type":"markdown","source":["### JungGu"],"metadata":{"id":"JFUKhd4XJus7"}},{"cell_type":"code","source":["JungGu_X = JungGu.loc[:, 'new_pos']\n","JungGu_y = JungGu.loc[:, 'dept']\n","JungGu_x_train, JungGu_x_test, JungGu_y_train, JungGu_y_test = train_test_split(JungGu_X, JungGu_y, test_size=0.2, stratify=JungGu_y, random_state=3)"],"metadata":{"id":"yX_EGEaTKN2C","executionInfo":{"status":"ok","timestamp":1682930634469,"user_tz":-540,"elapsed":13,"user":{"displayName":"김근영","userId":"15518782436185757366"}}},"execution_count":27,"outputs":[]},{"cell_type":"markdown","source":["### NamGu"],"metadata":{"id":"wAEFkhVXJuzM"}},{"cell_type":"code","source":["NamGu_X = NamGu.loc[:, 'new_pos']\n","NamGu_y = NamGu.loc[:, 'dept']\n","NamGu_x_train, NamGu_x_test, NamGu_y_train, NamGu_y_test = train_test_split(NamGu_X, NamGu_y, test_size=0.2, stratify=NamGu_y, random_state=3)"],"metadata":{"id":"4sv2FewdKOci","executionInfo":{"status":"ok","timestamp":1682930634469,"user_tz":-540,"elapsed":12,"user":{"displayName":"김근영","userId":"15518782436185757366"}}},"execution_count":28,"outputs":[]},{"cell_type":"markdown","source":["### SeoGu"],"metadata":{"id":"ptORDMYFJu5r"}},{"cell_type":"code","source":["SeoGu_X = SeoGu.loc[:, 'new_pos']\n","SeoGu_y = SeoGu.loc[:, 'dept']\n","SeoGu_x_train, SeoGu_x_test, SeoGu_y_train, SeoGu_y_test = train_test_split(SeoGu_X, SeoGu_y, test_size=0.2, stratify=SeoGu_y, random_state=3)"],"metadata":{"id":"3eCQvG8ZKO7W","executionInfo":{"status":"ok","timestamp":1682930634469,"user_tz":-540,"elapsed":12,"user":{"displayName":"김근영","userId":"15518782436185757366"}}},"execution_count":29,"outputs":[]},{"cell_type":"markdown","source":["### SuseongGu"],"metadata":{"id":"jjcKU62UJvA5"}},{"cell_type":"code","source":["Suseonggu_X = Suseonggu.loc[:, 'new_pos']\n","Suseonggu_y = Suseonggu.loc[:, 'dept']\n","Suseonggu_x_train, Suseonggu_x_test, Suseonggu_y_train, Suseonggu_y_test = train_test_split(Suseonggu_X, Suseonggu_y, test_size=0.2, stratify=Suseonggu_y, random_state=3)"],"metadata":{"id":"y6jbic37JvHu","executionInfo":{"status":"ok","timestamp":1682930634469,"user_tz":-540,"elapsed":12,"user":{"displayName":"김근영","userId":"15518782436185757366"}}},"execution_count":30,"outputs":[]},{"cell_type":"markdown","source":["## Glove를 사용한 벡터화(워드 임베딩)"],"metadata":{"id":"zoJSG00QqxYb"}},{"cell_type":"code","source":["# 버전 이슈 때문에 일단 보류류\n","# !pip install glove-python"],"metadata":{"id":"O_Gc44xE_QCB","executionInfo":{"status":"ok","timestamp":1682883864121,"user_tz":-540,"elapsed":509,"user":{"displayName":"김근영","userId":"15518782436185757366"}}},"execution_count":64,"outputs":[]},{"cell_type":"markdown","source":["## Word2Vec"],"metadata":{"id":"_mEH7zPG7xgt"}},{"cell_type":"code","source":["from gensim.models import Word2Vec"],"metadata":{"id":"JDsIpo9K8TjS","executionInfo":{"status":"ok","timestamp":1682930635659,"user_tz":-540,"elapsed":1202,"user":{"displayName":"김근영","userId":"15518782436185757366"}}},"execution_count":31,"outputs":[]},{"cell_type":"code","source":["# gensim 버전 확인\n","import gensim\n","print(gensim.__version__)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"a_guofftIpXu","executionInfo":{"status":"ok","timestamp":1682930635660,"user_tz":-540,"elapsed":7,"user":{"displayName":"김근영","userId":"15518782436185757366"}},"outputId":"7a13313d-1a59-4e9c-83bc-faa227fb73f2"},"execution_count":32,"outputs":[{"output_type":"stream","name":"stdout","text":["4.3.1\n"]}]},{"cell_type":"code","source":["BukGu_train_sent = BukGu_x_train.tolist()\n","BukGu_test_sent = BukGu_x_test.tolist()\n","\n","DalseongGun_train_sent = DalseongGun_x_train.tolist()\n","DalseongGun_test_sent = DalseongGun_x_test.tolist()\n","\n","DalsuGu_train_sent = DalsuGu_x_train.tolist()\n","DalsuGu_test_sent = DalsuGu_x_test.tolist()\n","\n","DongGu_train_sent = DongGu_x_train.tolist()\n","DongGu_test_sent = DongGu_x_test.tolist()\n","\n","JungGu_train_sent = JungGu_x_train.tolist()\n","JungGu_test_sent = JungGu_x_test.tolist()\n","\n","NamGu_train_sent = NamGu_x_train.tolist()\n","NamGu_test_sent = NamGu_x_test.tolist()\n","\n","SeoGu_train_sent = SeoGu_x_train.tolist()\n","SeoGu_test_sent = SeoGu_x_test.tolist()\n","\n","Suseonggu_train_sent = Suseonggu_x_train.tolist()\n","Suseonggu_test_sent = Suseonggu_x_test.tolist()\n","\n","df_train_sent = df_x_train.tolist()\n","df_test_sent = df_x_test.tolist()"],"metadata":{"id":"jErlL0-LskC0","executionInfo":{"status":"ok","timestamp":1682930730260,"user_tz":-540,"elapsed":265,"user":{"displayName":"김근영","userId":"15518782436185757366"}}},"execution_count":35,"outputs":[]},{"cell_type":"code","source":["# 8개의 자치구 하나로 합친 후 Word2Vec 모델 만들기\n","wv_model = Word2Vec(sentences=df_train_sent, vector_size= 1400, window= 5, min_count= 5, workers = 4, sg = 1)"],"metadata":{"id":"js6NuhA18VEm","executionInfo":{"status":"ok","timestamp":1682931818746,"user_tz":-540,"elapsed":505143,"user":{"displayName":"김근영","userId":"15518782436185757366"}}},"execution_count":38,"outputs":[]},{"cell_type":"code","source":["# 각 구마다 Word2Vec 모델 만들기\n","wv_BukGu = Word2Vec(sentences = BukGu_train_sent, vector_size= 5000, window= 5, min_count= 5, workers = 4, sg = 1)\n","wv_DalseongGun = Word2Vec(sentences = DalseongGun_train_sent, vector_size= 1262, window= 5, min_count= 5, workers = 4, sg = 1)\n","wv_DalsuGu = Word2Vec(sentences = DalsuGu_train_sent, vector_size= 1217, window= 5, min_count= 5, workers = 4, sg = 1)\n","wv_DongGu = Word2Vec(sentences = DongGu_train_sent, vector_size= 1396, window= 5, min_count= 5, workers = 4, sg = 1)\n","wv_JungGu = Word2Vec(sentences = JungGu_train_sent, vector_size= 1387, window= 5, min_count= 5, workers = 4, sg = 1)\n","wv_NamGu = Word2Vec(sentences = NamGu_train_sent, vector_size= 1250, window= 5, min_count= 5, workers = 4, sg = 1)\n","wv_SeoGu = Word2Vec(sentences = SeoGu_train_sent, vector_size= 1341, window= 5, min_count= 5, workers = 4, sg = 1)\n","wv_Suseonggu = Word2Vec(sentences = Suseonggu_train_sent, vector_size= 4929, window= 5, min_count= 5, workers = 4, sg = 1)"],"metadata":{"id":"nHk8ECrFfWYE","executionInfo":{"status":"ok","timestamp":1682932642731,"user_tz":-540,"elapsed":823995,"user":{"displayName":"김근영","userId":"15518782436185757366"}}},"execution_count":39,"outputs":[]},{"cell_type":"code","source":["# 통합 Word2Vec 모델 저장\n","import joblib\n","joblib.dump(wv_model, '/content/drive/MyDrive/Colab Notebooks/VALUE_UP공모전/증강/new_wv_model.joblib')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lSm5NtnxhMNT","executionInfo":{"status":"ok","timestamp":1682932644211,"user_tz":-540,"elapsed":1490,"user":{"displayName":"김근영","userId":"15518782436185757366"}},"outputId":"cd030fc9-55c8-4916-cad6-992c0c83ce8d"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['/content/drive/MyDrive/Colab Notebooks/VALUE_UP공모전/증강/new_wv_model.joblib']"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["# 자치구별 Word2Vec 모델 저장\n","import joblib\n","joblib.dump(wv_BukGu, '/content/drive/MyDrive/Colab Notebooks/VALUE_UP공모전/증강/wv_BukGu_model.joblib')\n","joblib.dump(wv_DalseongGun, '/content/drive/MyDrive/Colab Notebooks/VALUE_UP공모전/증강/wv_DalseongGun_model.joblib')\n","joblib.dump(wv_DalsuGu, '/content/drive/MyDrive/Colab Notebooks/VALUE_UP공모전/증강/wv_DalsuGu_model.joblib')\n","joblib.dump(wv_DongGu, '/content/drive/MyDrive/Colab Notebooks/VALUE_UP공모전/증강/wv_DongGu_model.joblib')\n","joblib.dump(wv_JungGu, '/content/drive/MyDrive/Colab Notebooks/VALUE_UP공모전/증강/wv_JungGu_model.joblib')\n","joblib.dump(wv_NamGu, '/content/drive/MyDrive/Colab Notebooks/VALUE_UP공모전/증강/wv_NamGu_model.joblib')\n","joblib.dump(wv_SeoGu, '/content/drive/MyDrive/Colab Notebooks/VALUE_UP공모전/증강/wv_SeoGu_model.joblib')\n","joblib.dump(wv_Suseonggu, '/content/drive/MyDrive/Colab Notebooks/VALUE_UP공모전/증강/wv_Suseonggu_model.joblib')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SInJ2qCvfo2e","executionInfo":{"status":"ok","timestamp":1682947785894,"user_tz":-540,"elapsed":4756,"user":{"displayName":"김근영","userId":"15518782436185757366"}},"outputId":"8a2b5cb5-d024-4914-a7f4-a1bfbb8195ef"},"execution_count":79,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['/content/drive/MyDrive/Colab Notebooks/VALUE_UP공모전/증강/wv_Suseonggu_model.joblib']"]},"metadata":{},"execution_count":79}]},{"cell_type":"code","source":["def get_sent_embedding(model, embedding_size, tokenized_words):\n","    feature_vec = np.zeros((embedding_size,), dtype=\"float32\")\n","    n_words = 0\n","    for word in tokenized_words:\n","        if word in model.wv.key_to_index:\n","            n_words += 1\n","            # 임베딩 벡터에 해당 단어의 벡터를 더함\n","            feature_vec = np.add(feature_vec, model.wv[word])\n","    # 단어 개수가 0보다 큰 경우 벡터를 단어 개수로 나눠줌 (평균 임베딩 벡터 계산)\n","    if (n_words > 0):\n","        feature_vec = np.divide(feature_vec, n_words)\n","    return feature_vec"],"metadata":{"id":"JsP3v81NVat7","executionInfo":{"status":"ok","timestamp":1682932644212,"user_tz":-540,"elapsed":3,"user":{"displayName":"김근영","userId":"15518782436185757366"}}},"execution_count":41,"outputs":[]},{"cell_type":"code","source":["# 문장벡터 데이터 셋 만들기\n","def get_dataset(sentences, model, num_features):\n","    dataset = list()\n","\n","    # 각 문장을 벡터화해서 리스트에 저장\n","    for sent in sentences:\n","        dataset.append(get_sent_embedding(model, num_features, sent))\n","\n","    # 리스트를 numpy 배열로 변환하여 반환\n","    sent_embedding_vectors = np.stack(dataset)\n","    \n","    return sent_embedding_vectors"],"metadata":{"id":"mJzksl6Z-uyo","executionInfo":{"status":"ok","timestamp":1682932644212,"user_tz":-540,"elapsed":3,"user":{"displayName":"김근영","userId":"15518782436185757366"}}},"execution_count":42,"outputs":[]},{"cell_type":"code","source":["# 학습 데이터의 문장들을 Word2Vec 모델을 사용하여 벡터화\n","\n","BukGu_train_vecs = get_dataset(BukGu_train_sent, wv_model, 1400)\n","BukGu_test_vecs = get_dataset(BukGu_test_sent, wv_model, 1400)\n","\n","DalseongGun_train_vecs = get_dataset(DalseongGun_train_sent, wv_model, 1400)\n","DalseongGun_test_vecs = get_dataset(DalseongGun_test_sent, wv_model, 1400)\n","\n","DalsuGu_train_vecs = get_dataset(DalsuGu_train_sent, wv_model, 1400)\n","DalsuGu_test_vecs = get_dataset(DalsuGu_test_sent, wv_model, 1400)\n","\n","DongGu_train_vecs = get_dataset(DongGu_train_sent, wv_model, 1400)\n","DongGu_test_vecs = get_dataset(DongGu_test_sent, wv_model, 1400)\n","\n","JungGu_train_vecs = get_dataset(JungGu_train_sent, wv_model, 1400)\n","JungGu_test_vecs = get_dataset(JungGu_test_sent, wv_model, 1400)\n","\n","NamGu_train_vecs = get_dataset(NamGu_train_sent, wv_model, 1400)\n","NamGu_test_vecs = get_dataset(NamGu_test_sent, wv_model, 1400)\n","\n","SeoGu_train_vecs = get_dataset(SeoGu_train_sent, wv_model, 1400)\n","SeoGu_test_vecs = get_dataset(SeoGu_test_sent, wv_model, 1400)\n","\n","Suseonggu_train_vecs = get_dataset(Suseonggu_train_sent, wv_model, 1400)\n","Suseonggu_test_vecs = get_dataset(Suseonggu_test_sent, wv_model, 1400)\n","\n","# df_train_sent = df_x_train.tolist()\n","# df_test_sent = df_x_test.tolist()"],"metadata":{"id":"vRIKhCOyVd2O","executionInfo":{"status":"ok","timestamp":1682932718262,"user_tz":-540,"elapsed":13205,"user":{"displayName":"김근영","userId":"15518782436185757366"}}},"execution_count":43,"outputs":[]},{"cell_type":"code","source":["BukGu_train_vecs[3]"],"metadata":{"id":"LmJyaxqbBQni","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1682932729916,"user_tz":-540,"elapsed":295,"user":{"displayName":"김근영","userId":"15518782436185757366"}},"outputId":"c8fbed97-ae39-4bf0-d465-e97663f7440d"},"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 0.00948729, -0.07319263, -0.00915361, ..., -0.01548383,\n","       -0.00928318,  0.01920143], dtype=float32)"]},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":[],"metadata":{"id":"eH2U5r_v-vkV"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 모델링"],"metadata":{"id":"9HDvktUtXZF0"}},{"cell_type":"code","source":["from lightgbm import LGBMClassifier\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.discriminant_analysis import LinearDiscriminantAnalysis\n","from sklearn.metrics import f1_score, accuracy_score\n","from sklearn.metrics import classification_report"],"metadata":{"id":"K5tbJ4WoV08U","executionInfo":{"status":"ok","timestamp":1682932735211,"user_tz":-540,"elapsed":1927,"user":{"displayName":"김근영","userId":"15518782436185757366"}}},"execution_count":45,"outputs":[]},{"cell_type":"markdown","source":["### LinearDiscriminantAnalysis"],"metadata":{"id":"ZNuMuyNmXdCb"}},{"cell_type":"code","source":["BukGu_model_lda = LinearDiscriminantAnalysis()\n","DalseongGun_model_lda = LinearDiscriminantAnalysis()\n","DalsuGu_model_lda = LinearDiscriminantAnalysis()\n","DongGu_model_lda = LinearDiscriminantAnalysis()\n","JungGu_model_lda = LinearDiscriminantAnalysis()\n","NamGu_model_lda = LinearDiscriminantAnalysis()\n","SeoGu_model_lda = LinearDiscriminantAnalysis()\n","Suseonggu_model_lda = LinearDiscriminantAnalysis()"],"metadata":{"id":"TdGN4jkFV5fh","executionInfo":{"status":"ok","timestamp":1682933062832,"user_tz":-540,"elapsed":272,"user":{"displayName":"김근영","userId":"15518782436185757366"}}},"execution_count":50,"outputs":[]},{"cell_type":"code","source":["BukGu_model_lda.fit(BukGu_train_vecs, BukGu_y_train)\n","DalseongGun_model_lda.fit(DalseongGun_train_vecs, DalseongGun_y_train)\n","DalsuGu_model_lda.fit(DalsuGu_train_vecs, DalsuGu_y_train)\n","DongGu_model_lda.fit(DongGu_train_vecs, DongGu_y_train)\n","JungGu_model_lda.fit(JungGu_train_vecs, JungGu_y_train)\n","NamGu_model_lda.fit(NamGu_train_vecs, NamGu_y_train)\n","SeoGu_model_lda.fit(SeoGu_train_vecs, SeoGu_y_train)\n","Suseonggu_model_lda.fit(Suseonggu_train_vecs, Suseonggu_y_train)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"jpGRlU0pj2gb","executionInfo":{"status":"ok","timestamp":1682933101809,"user_tz":-540,"elapsed":37426,"user":{"displayName":"김근영","userId":"15518782436185757366"}},"outputId":"507c6493-ebfc-4bd6-af24-90e863eafe0b"},"execution_count":51,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearDiscriminantAnalysis()"],"text/html":["<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearDiscriminantAnalysis()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearDiscriminantAnalysis</label><div class=\"sk-toggleable__content\"><pre>LinearDiscriminantAnalysis()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":51}]},{"cell_type":"code","source":["# 각 자치구 model save\n","import joblib\n","joblib.dump(BukGu_model_lda, '/content/drive/MyDrive/Colab Notebooks/VALUE_UP공모전/증강/BukGu_model.joblib')\n","joblib.dump(DalseongGun_model_lda, '/content/drive/MyDrive/Colab Notebooks/VALUE_UP공모전/증강/DalseongGun_model.joblib')\n","joblib.dump(DalsuGu_model_lda, '/content/drive/MyDrive/Colab Notebooks/VALUE_UP공모전/증강/DalsuGu_model.joblib')\n","joblib.dump(DongGu_model_lda, '/content/drive/MyDrive/Colab Notebooks/VALUE_UP공모전/증강/DongGu_model.joblib')\n","joblib.dump(JungGu_model_lda, '/content/drive/MyDrive/Colab Notebooks/VALUE_UP공모전/증강/JungGu_model.joblib')\n","joblib.dump(NamGu_model_lda, '/content/drive/MyDrive/Colab Notebooks/VALUE_UP공모전/증강/NamGu_model.joblib')\n","joblib.dump(SeoGu_model_lda, '/content/drive/MyDrive/Colab Notebooks/VALUE_UP공모전/증강/SeoGu_model.joblib')\n","joblib.dump(Suseonggu_model_lda, '/content/drive/MyDrive/Colab Notebooks/VALUE_UP공모전/증강/Suseonggu_model.joblib')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"prUd4NZ2nMrz","executionInfo":{"status":"ok","timestamp":1682933101809,"user_tz":-540,"elapsed":3,"user":{"displayName":"김근영","userId":"15518782436185757366"}},"outputId":"fe972d6e-8a7c-4024-9179-c3855df0ee1c"},"execution_count":52,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['/content/drive/MyDrive/Colab Notebooks/VALUE_UP공모전/증강/Suseonggu_model.joblib']"]},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["pred_BukGu = BukGu_model_lda.predict(BukGu_test_vecs)\n","pred_DalseongGun = DalseongGun_model_lda.predict(DalseongGun_test_vecs)\n","pred_DalsuGu = DalsuGu_model_lda.predict(DalsuGu_test_vecs)\n","pred_DongGu = DongGu_model_lda.predict(DongGu_test_vecs)\n","pred_JungGu = JungGu_model_lda.predict(JungGu_test_vecs)\n","pred_NamGu = NamGu_model_lda.predict(NamGu_test_vecs)\n","pred_SeoGu = SeoGu_model_lda.predict(SeoGu_test_vecs)\n","pred_Suseonggu = Suseonggu_model_lda.predict(Suseonggu_test_vecs)"],"metadata":{"id":"S2J6fZJ3kxL9","executionInfo":{"status":"ok","timestamp":1682943919734,"user_tz":-540,"elapsed":294,"user":{"displayName":"김근영","userId":"15518782436185757366"}}},"execution_count":72,"outputs":[]},{"cell_type":"code","source":["def cfr(pred, y_test):\n","    print(classification_report(pred, y_test))\n","    print('='*70)"],"metadata":{"id":"1z93zjWZKHh7","executionInfo":{"status":"ok","timestamp":1682943637193,"user_tz":-540,"elapsed":312,"user":{"displayName":"김근영","userId":"15518782436185757366"}}},"execution_count":70,"outputs":[]},{"cell_type":"code","source":["cfr(pred_BukGu, BukGu_y_test)\n","cfr(pred_DalseongGun, DalseongGun_y_test)\n","cfr(pred_DalsuGu, DalsuGu_y_test)\n","cfr(pred_DongGu, DongGu_y_test)\n","cfr(pred_JungGu, JungGu_y_test)\n","cfr(pred_NamGu, NamGu_y_test)\n","cfr(pred_SeoGu, SeoGu_y_test)\n","cfr(pred_Suseonggu, Suseonggu_y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"s2xyLPV_K4ng","executionInfo":{"status":"ok","timestamp":1682943972966,"user_tz":-540,"elapsed":373,"user":{"displayName":"김근영","userId":"15518782436185757366"}},"outputId":"8f07cd32-06cf-45e9-fcce-cf192096f18d"},"execution_count":73,"outputs":[{"output_type":"stream","name":"stdout","text":["               precision    recall  f1-score   support\n","\n","          감사실       0.96      0.96      0.96       286\n","      도시국 건설과       0.78      0.69      0.74       232\n","    도시국 건축주택과       0.86      0.84      0.85       235\n","      도시국 교통과       0.87      0.85      0.86       229\n","    도시국 도시관리과       0.64      0.62      0.63        81\n","    도시국 도시행정과       0.44      0.89      0.59         9\n","    도시국 재난안전과       0.70      0.98      0.82        52\n","  문화녹지국 공원녹지과       0.33      0.42      0.37        36\n","  복지환경국 자원순환과       0.49      0.82      0.61        22\n","  복지환경국 환경관리과       0.51      0.51      0.51        65\n","     읍/면/동사무소       0.58      0.79      0.67        14\n","주민생활지원국 환경관리과       0.61      0.50      0.55       107\n","\n","     accuracy                           0.78      1368\n","    macro avg       0.65      0.74      0.68      1368\n"," weighted avg       0.79      0.78      0.78      1368\n","\n","======================================================================\n","              precision    recall  f1-score   support\n","\n","   건설도시국 건설과       0.65      0.67      0.66        78\n","   건설도시국 건축과       0.77      0.78      0.78       104\n","   건설도시국 교통과       0.25      0.17      0.20        30\n"," 건설도시국 도시계획과       0.21      0.19      0.20        16\n"," 건설도시국 도시정비과       0.18      0.18      0.18        17\n"," 건설도시국 안전총괄과       0.55      0.40      0.46        30\n","   경제환경국 교통과       0.64      0.67      0.66        87\n"," 경제환경국 농업정책과       0.43      0.60      0.50         5\n"," 경제환경국 청소위생과       0.23      0.33      0.27         9\n","   경제환경국 환경과       0.62      0.60      0.61        43\n"," 교육복지국 교육정책과       0.57      1.00      0.73         4\n"," 문화관광국 공원녹지과       0.45      0.47      0.46        36\n"," 문화관광국 문화예술과       0.33      0.33      0.33        12\n","     보건소 보건과       0.67      1.00      0.80         4\n","    읍/면/동사무소       0.27      0.28      0.28        32\n"," 자치행정국 종합민원과       0.33      0.40      0.36         5\n","\n","    accuracy                           0.56       512\n","   macro avg       0.45      0.50      0.47       512\n","weighted avg       0.55      0.56      0.55       512\n","\n","======================================================================\n","               precision    recall  f1-score   support\n","\n","  경제환경국 교통행정과       0.36      0.33      0.35        27\n","  경제환경국 기후환경과       0.25      0.38      0.30         8\n","  경제환경국 녹색환경과       0.57      0.60      0.58        43\n"," 경제환경국 일자리경제과       0.39      0.64      0.48        11\n","  경제환경국 주차관리과       0.86      0.77      0.81       271\n","    경제환경국 청소과       0.85      0.82      0.84        90\n","  경제환경국 환경보호과       0.48      0.61      0.54        41\n","  도시건설국 도시관리과       0.50      0.44      0.47       114\n","    도시창조국 건설과       0.63      0.51      0.56       138\n","    도시창조국 건축과       0.71      0.78      0.74       106\n","  도시창조국 공원녹지과       0.51      0.58      0.54        73\n","  도시창조국 도시재생과       0.43      0.44      0.44        27\n","      보건소 보건과       0.74      0.94      0.83        34\n","    보건소 보건행정과       0.67      0.67      0.67        15\n","복지문화국 문화체육관광과       0.70      0.73      0.71        22\n","     읍/면/동사무소       0.47      0.67      0.55        27\n","    자치행정국 총무과       0.23      0.60      0.33         5\n","\n","     accuracy                           0.65      1052\n","    macro avg       0.55      0.62      0.57      1052\n"," weighted avg       0.67      0.65      0.66      1052\n","\n","======================================================================\n","               precision    recall  f1-score   support\n","\n","  경제복지국 경제지원과       0.46      0.67      0.55         9\n","  경제복지국 환경녹색과       0.51      0.47      0.49        60\n","    도시건설국 건설과       0.61      0.46      0.52       149\n","  도시건설국 건축주택과       0.71      0.73      0.72        97\n","    도시건설국 교통과       0.56      0.55      0.56       112\n","  도시건설국 도시공원과       0.38      0.38      0.38        29\n"," 도시건설국 도시디자인과       0.31      0.31      0.31        13\n","  도시건설국 안전녹지과       0.44      0.42      0.43        26\n","    도시안전국 건설과       0.26      0.32      0.29        37\n","  도시안전국 건축주택과       0.69      0.77      0.73        69\n","  도시안전국 공원녹지과       0.41      0.50      0.45        24\n","    도시안전국 교통과       0.48      0.52      0.50        71\n","    도시안전국 도시과       0.31      0.42      0.36        12\n","    보건소 보건의약과       0.65      0.87      0.74        15\n","    복지생활국 경제과       0.29      0.36      0.32        14\n","  복지생활국 환경자원과       0.11      0.12      0.11        26\n","  안전행정국 평생학습과       0.42      0.50      0.45        10\n","     읍/면/동사무소       0.62      0.59      0.61        17\n","주민생활지원국 환경청소과       0.51      0.45      0.48        60\n","  행정문화국 행정지원과       0.19      0.21      0.20        14\n","\n","     accuracy                           0.52       864\n","    macro avg       0.45      0.48      0.46       864\n"," weighted avg       0.52      0.52      0.52       864\n","\n","======================================================================\n","               precision    recall  f1-score   support\n","\n","  관광경제국 문화교육과       0.82      1.00      0.90         9\n","  관광경제국 환경자원과       0.29      0.20      0.24        10\n","        기획예산실       0.33      1.00      0.50         2\n","    도시관광국 건설과       0.41      0.30      0.34        37\n","  도시관광국 건축주택과       0.71      0.70      0.71       128\n","    도시국 도시관리과       0.07      0.05      0.06        21\n","    도시안전국 건설과       0.12      0.14      0.13         7\n","  도시안전국 건축주택과       0.79      0.83      0.81        75\n","    도시안전국 교통과       0.26      0.26      0.26        19\n","  도시재생국 관광자원과       0.33      0.30      0.32        10\n","  도시재생국 도시재생과       0.29      0.17      0.21        24\n","      보건소 보건과       0.58      0.88      0.70         8\n","    안전행정국 경제과       0.39      0.56      0.46        16\n","     읍/면/동사무소       0.67      0.80      0.73         5\n","주민생활지원국 문화관광과       0.25      0.40      0.31         5\n","  주민생활지원국 환경과       0.31      0.33      0.32        15\n","      총무국 총무과       0.20      0.20      0.20        10\n","    행정지원국 경제과       0.27      0.38      0.32         8\n","  환경건설국 건설안전과       0.22      0.17      0.19        12\n","  환경건설국 건축주택과       0.30      0.38      0.33         8\n","    환경건설국 교통과       0.60      0.64      0.62        76\n","  환경건설국 녹색환경과       0.24      0.23      0.23        22\n","\n","     accuracy                           0.53       527\n","    macro avg       0.38      0.45      0.40       527\n"," weighted avg       0.52      0.53      0.52       527\n","\n","======================================================================\n","               precision    recall  f1-score   support\n","\n","        기획조정실       0.50      0.25      0.33        16\n","    도시국 지역교통과       0.25      0.10      0.14        20\n","    도시창조국 건설과       0.31      0.44      0.36        52\n","    도시창조국 건축과       0.74      0.86      0.80       145\n","  도시창조국 공원녹지과       0.50      0.22      0.31        18\n","    도시창조국 교통과       0.56      0.59      0.58        69\n","  도시창조국 도시재생과       0.29      0.23      0.26        22\n","          보건소       0.50      0.33      0.40        12\n","     읍/면/동사무소       0.45      0.31      0.37        16\n","  주민생활국 생활환경과       0.11      0.10      0.10        21\n","주민생활지원국 환경관리과       0.29      0.09      0.14        22\n","  주민행복국 녹색환경과       0.35      0.43      0.39        53\n","  주민행복국 시장경제과       0.50      0.36      0.42        11\n","    주민행복국 위생과       0.17      0.33      0.22         3\n","\n","     accuracy                           0.51       480\n","    macro avg       0.39      0.33      0.34       480\n"," weighted avg       0.50      0.51      0.49       480\n","\n","======================================================================\n","               precision    recall  f1-score   support\n","\n","        기획감사실       0.38      0.29      0.33        17\n","        기획예산실       0.00      0.00      0.00         6\n","      도시국 건설과       0.00      0.00      0.00         3\n","    도시국 건설방재과       0.26      0.24      0.25        25\n","    도시국 건축주택과       0.39      0.44      0.42        25\n","      도시국 교통과       0.52      0.59      0.55        56\n","    도시국 도시관리과       0.23      0.30      0.26        33\n","    도시안전국 건설과       0.24      0.18      0.21        22\n","  도시안전국 건축주택과       0.76      0.86      0.81        29\n","    도시안전국 교통과       0.44      0.38      0.41        32\n","  도시안전국 도시공원과       0.22      0.22      0.22        18\n","  도시안전국 도시재생과       0.25      0.18      0.21        17\n","    보건소 보건행정과       0.57      0.80      0.67         5\n","  복지생활국 환경청소과       0.39      0.36      0.37        39\n","    사회산업국 청소과       0.00      0.00      0.00        14\n","  사회산업국 환경관리과       0.00      0.00      0.00         5\n","     읍/면/동사무소       0.14      0.19      0.16        16\n","  자치행정국 문화홍보과       0.40      0.44      0.42         9\n","  자치행정국 종합민원과       0.17      0.25      0.20         4\n","    자치행정국 총무과       0.29      0.25      0.27        16\n","  주민생활지원국 경제과       0.48      0.42      0.45        26\n","주민생활지원국 복지사업과       0.33      0.27      0.30        11\n","주민생활지원국 환경관리과       0.37      0.34      0.36        47\n","\n","     accuracy                           0.36       475\n","    macro avg       0.30      0.30      0.30       475\n"," weighted avg       0.36      0.36      0.36       475\n","\n","======================================================================\n","              precision    recall  f1-score   support\n","\n"," 교육문화국 문화체육과       0.76      0.81      0.78        36\n","     도시국 건설과       0.72      0.62      0.67       207\n","     도시국 건축과       0.87      0.88      0.87       427\n","   도시국 공원녹지과       0.75      0.78      0.76       113\n","     도시국 교통과       0.88      0.84      0.86       243\n","  도시국 도시디자인과       0.42      0.54      0.47        24\n","   보건소 보건행정과       0.67      0.91      0.77        11\n","   복지국 경제환경과       0.54      0.54      0.54        91\n","   복지국 녹색환경과       0.73      0.73      0.73        92\n","     복지국 복지과       0.56      0.77      0.65        13\n","   복지국 자원순환과       0.76      0.79      0.77        52\n","    읍/면/동사무소       0.24      0.35      0.29        17\n","\n","    accuracy                           0.77      1326\n","   macro avg       0.66      0.71      0.68      1326\n","weighted avg       0.78      0.77      0.77      1326\n","\n","======================================================================\n"]}]},{"cell_type":"markdown","source":["### 모든 자치구를 하나로 합친 Word2Vec모델과 각자 자치구의 Word2Vec모델 사용 비교를 위한 코드"],"metadata":{"id":"BvBRHx4DPgo9"}},{"cell_type":"code","source":["# DalseongGun 데이터를 DalseongGun Word2Vec 모델을 사용하여 벡터화\n","# 모든 자치구를 하나로 합친 Word2Vec모델과 각자 자치구의 Word2Vec모델 사용 비교를 위한 코드\n","DalseongGun_train_vecs_local = get_dataset(DalseongGun_train_sent, wv_DalseongGun, 1262)\n","DalseongGun_test_vecs_local = get_dataset(DalseongGun_test_sent, wv_DalseongGun, 1262)"],"metadata":{"id":"8XKExpd6POFY","executionInfo":{"status":"ok","timestamp":1682943458200,"user_tz":-540,"elapsed":1729,"user":{"displayName":"김근영","userId":"15518782436185757366"}}},"execution_count":67,"outputs":[]},{"cell_type":"code","source":["DalseongGun_model_lda_local = LinearDiscriminantAnalysis()\n","DalseongGun_model_lda_local.fit(DalseongGun_train_vecs_local, DalseongGun_y_train)\n","pred_DalseongGun_local = DalseongGun_model_lda_local.predict(DalseongGun_test_vecs_local)"],"metadata":{"id":"vujp25XQQKCv","executionInfo":{"status":"ok","timestamp":1682944327508,"user_tz":-540,"elapsed":3323,"user":{"displayName":"김근영","userId":"15518782436185757366"}}},"execution_count":77,"outputs":[]},{"cell_type":"code","source":["print('total Word2Vec')\n","cfr(pred_DalseongGun, DalseongGun_y_test)\n","cfr(pred_DalseongGun_local, DalseongGun_y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YV38fLvVP3UK","executionInfo":{"status":"ok","timestamp":1682944330673,"user_tz":-540,"elapsed":278,"user":{"displayName":"김근영","userId":"15518782436185757366"}},"outputId":"6b813106-b857-442f-9c9f-4fd91fab1893"},"execution_count":78,"outputs":[{"output_type":"stream","name":"stdout","text":["total Word2Vec\n","              precision    recall  f1-score   support\n","\n","   건설도시국 건설과       0.65      0.67      0.66        78\n","   건설도시국 건축과       0.77      0.78      0.78       104\n","   건설도시국 교통과       0.25      0.17      0.20        30\n"," 건설도시국 도시계획과       0.21      0.19      0.20        16\n"," 건설도시국 도시정비과       0.18      0.18      0.18        17\n"," 건설도시국 안전총괄과       0.55      0.40      0.46        30\n","   경제환경국 교통과       0.64      0.67      0.66        87\n"," 경제환경국 농업정책과       0.43      0.60      0.50         5\n"," 경제환경국 청소위생과       0.23      0.33      0.27         9\n","   경제환경국 환경과       0.62      0.60      0.61        43\n"," 교육복지국 교육정책과       0.57      1.00      0.73         4\n"," 문화관광국 공원녹지과       0.45      0.47      0.46        36\n"," 문화관광국 문화예술과       0.33      0.33      0.33        12\n","     보건소 보건과       0.67      1.00      0.80         4\n","    읍/면/동사무소       0.27      0.28      0.28        32\n"," 자치행정국 종합민원과       0.33      0.40      0.36         5\n","\n","    accuracy                           0.56       512\n","   macro avg       0.45      0.50      0.47       512\n","weighted avg       0.55      0.56      0.55       512\n","\n","======================================================================\n","              precision    recall  f1-score   support\n","\n","   건설도시국 건설과       0.69      0.68      0.68        81\n","   건설도시국 건축과       0.81      0.73      0.77       116\n","   건설도시국 교통과       0.30      0.43      0.35        14\n"," 건설도시국 도시계획과       0.43      0.30      0.35        20\n"," 건설도시국 도시정비과       0.12      0.14      0.13        14\n"," 건설도시국 안전총괄과       0.59      0.39      0.47        33\n","   경제환경국 교통과       0.73      0.65      0.69       101\n"," 경제환경국 농업정책과       0.43      0.60      0.50         5\n"," 경제환경국 청소위생과       0.15      0.40      0.22         5\n","   경제환경국 환경과       0.69      0.72      0.71        40\n"," 교육복지국 교육정책과       0.71      1.00      0.83         5\n"," 문화관광국 공원녹지과       0.34      0.42      0.38        31\n"," 문화관광국 문화예술과       0.33      0.40      0.36        10\n","     보건소 보건과       0.83      1.00      0.91         5\n","    읍/면/동사무소       0.33      0.41      0.37        27\n"," 자치행정국 종합민원과       0.17      0.20      0.18         5\n","\n","    accuracy                           0.60       512\n","   macro avg       0.48      0.53      0.49       512\n","weighted avg       0.62      0.60      0.61       512\n","\n","======================================================================\n"]}]},{"cell_type":"markdown","source":["## **성능이 가장 좋았던 LDA만 모든 자치구에 대해서 진행했음 다른 모델 필요시 추가 업로드 예정**"],"metadata":{"id":"vT8GzWnrMNop"}},{"cell_type":"markdown","source":["## 패딩"],"metadata":{"id":"H3Hzmt4GGFp1"}},{"cell_type":"code","source":["from tensorflow.keras.preprocessing.sequence import pad_sequences\n","train_data_vecs_pd = pad_sequences(train_data_vecs, maxlen = 1000)\n","test_data_vecs_pd = pad_sequences(test_data_vecs, maxlen = 1000)"],"metadata":{"id":"LEkVhgMva7JE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_data_vecs_pd.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5TdeZNLpbt2b","executionInfo":{"status":"ok","timestamp":1682828196969,"user_tz":-540,"elapsed":508,"user":{"displayName":"김근영","userId":"15518782436185757366"}},"outputId":"63f85b36-3f12-4d12-c90c-64e55493fbb0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(5468, 1000)"]},"metadata":{},"execution_count":33}]},{"cell_type":"markdown","source":["### RandomForest"],"metadata":{"id":"zSTOHhoYcKjY"}},{"cell_type":"code","source":["m_model_rf = RandomForestClassifier()\n","m_model_rf.fit(train_data_vecs, y_train)\n","pred_rf = m_model_rf.predict(test_data_vecs)"],"metadata":{"id":"dkSZ4RlrcN15"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(classification_report(pred_rf, y_test))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sPjIFfAKcXZe","executionInfo":{"status":"ok","timestamp":1682828227922,"user_tz":-540,"elapsed":42,"user":{"displayName":"김근영","userId":"15518782436185757366"}},"outputId":"c8cff65d-859e-4599-ef6a-540d33825ee0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["               precision    recall  f1-score   support\n","\n","          감사실       0.96      0.97      0.96       283\n","      도시국 건설과       0.80      0.59      0.68       277\n","    도시국 건축주택과       0.89      0.79      0.84       262\n","      도시국 교통과       0.88      0.74      0.81       265\n","    도시국 도시관리과       0.44      0.61      0.51        56\n","    도시국 도시행정과       0.06      1.00      0.11         1\n","    도시국 재난안전과       0.70      0.94      0.80        54\n","  문화녹지국 공원녹지과       0.02      0.50      0.04         2\n","  복지환경국 자원순환과       0.27      0.77      0.40        13\n","  복지환경국 환경관리과       0.37      0.60      0.46        40\n","     읍/면/동사무소       0.47      0.75      0.58        12\n","주민생활지원국 환경관리과       0.56      0.48      0.52       103\n","\n","     accuracy                           0.75      1368\n","    macro avg       0.53      0.73      0.56      1368\n"," weighted avg       0.81      0.75      0.77      1368\n","\n"]}]},{"cell_type":"markdown","source":["### LGM"],"metadata":{"id":"Cr1ntreV2FQw"}},{"cell_type":"code","source":["from lightgbm import LGBMClassifier\n","m_model_lgb = LGBMClassifier()\n","m_model_lgb.fit(train_data_vecs, y_train)\n","pred_lgb = m_model_lgb.predict(test_data_vecs)"],"metadata":{"id":"9DOxGkqe2FW5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(classification_report(pred_lgb, y_test))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Lyrl_4Ad2FdC","executionInfo":{"status":"ok","timestamp":1682769213907,"user_tz":-540,"elapsed":301,"user":{"displayName":"김근영","userId":"15518782436185757366"}},"outputId":"30ece71b-3a3e-4a62-dfad-c0a7629d2ecb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["               precision    recall  f1-score   support\n","\n","          감사실       0.96      0.96      0.96       286\n","      도시국 건설과       0.82      0.64      0.72       266\n","    도시국 건축주택과       0.88      0.82      0.85       248\n","      도시국 교통과       0.88      0.82      0.84       240\n","    도시국 도시관리과       0.54      0.57      0.55        74\n","    도시국 도시행정과       0.33      1.00      0.50         6\n","    도시국 재난안전과       0.77      0.90      0.83        62\n","  문화녹지국 공원녹지과       0.13      0.50      0.21        12\n","  복지환경국 자원순환과       0.32      0.67      0.44        18\n","  복지환경국 환경관리과       0.35      0.53      0.43        43\n","     읍/면/동사무소       0.37      0.70      0.48        10\n","주민생활지원국 환경관리과       0.54      0.46      0.49       103\n","\n","     accuracy                           0.76      1368\n","    macro avg       0.57      0.71      0.61      1368\n"," weighted avg       0.80      0.76      0.77      1368\n","\n"]}]},{"cell_type":"markdown","source":["### 라벨 인코딩"],"metadata":{"id":"B0TCZMdouYHf"}},{"cell_type":"code","source":["from sklearn.preprocessing import LabelEncoder\n","le = LabelEncoder()\n","y_train_le = le.fit_transform(y_train)\n","y_test_le = le.transform(y_test)"],"metadata":{"id":"SufueSGyun3G"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x_train_lst = x_train.tolist()"],"metadata":{"id":"odkKJDaI9XIp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GbXyELzB9b_Z","executionInfo":{"status":"ok","timestamp":1682859107724,"user_tz":-540,"elapsed":283,"user":{"displayName":"김근영","userId":"15518782436185757366"}},"outputId":"fa8f5c01-cc65-4497-de13-3e1bfad85d87"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([3, 9, 6, ..., 3, 0, 7])"]},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["x_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HjgfQmJh7tA3","executionInfo":{"status":"ok","timestamp":1682758258601,"user_tz":-540,"elapsed":321,"user":{"displayName":"김근영","userId":"15518782436185757366"}},"outputId":"400eb74e-7a0d-4ff5-b52d-269533727c4f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["4980    [칠곡, 경북대, 병원, 주변, 도로, 무단, 횡단, 대하, 바쁘, 업무, 이렇, ...\n","1699    [아파트, 공사, 소음, 관련, 민원, 신고, 칠성동, 대구역, 서원프레, 시빌, ...\n","6426    [동, 변동, 화요, 시장, 동, 변동, 이사, 오, 일, 좋, 점, 열리, 화요,...\n","3964    [서변중학교, 통학, 길, 인도, 차지, 냉장고, 샌드위치, 판넬, 단속, 부탁, ...\n","6496    [북부, 도서관, 자전거, 보관대, 설치, 이, 수고, 많, 북구, 발전, 위하, ...\n","                              ...                        \n","3324    [배광식, 구청장, 상벌, 규정, 유무, 행정, 전문가, 이, 줄, 알, 구청장, ...\n","6406    [이마트, 칠성, 점, 동편, 건너, 공사, 관련, 안녕하세요, 북구, 거주, 주민...\n","6476    [불법, 주차, 단속, 요청, 날씨, 구정, 업무, 고생, 많, 코오롱, 하늘, 채...\n","2045    [대구시장, 북, 구청장, 선거, 공약, 지키, 공약, 행정, 맞, 보, 대구시장,...\n","2108    [동천동, 동천, 공원, 함지, 초, 교, 쪽, 흙, 쓸리, 내려오, 통행, 불편,...\n","Name: new_pos, Length: 5468, dtype: object"]},"metadata":{},"execution_count":144}]},{"cell_type":"markdown","source":["## 딥러닝"],"metadata":{"id":"dRU9s6-lZlXt"}},{"cell_type":"code","source":["from tensorflow.keras.callbacks import EarlyStopping\n","es = EarlyStopping(monitor='val_loss', min_delta=0, patience=10,verbose=1)"],"metadata":{"id":"YHLS4JuQeHOd"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### to_categorical"],"metadata":{"id":"QlVPfvgqe_uy"}},{"cell_type":"code","source":["y_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nAsi-KctuOUm","executionInfo":{"status":"ok","timestamp":1682766884986,"user_tz":-540,"elapsed":258,"user":{"displayName":"김근영","userId":"15518782436185757366"}},"outputId":"11fa4a77-db5d-48ea-f19a-9d45d3997811"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["4980          도시국 교통과\n","1699      복지환경국 환경관리과\n","6426        도시국 재난안전과\n","3964        도시국 건축주택과\n","6496          도시국 건설과\n","            ...      \n","3324              감사실\n","6406    주민생활지원국 환경관리과\n","6476          도시국 교통과\n","2045              감사실\n","2108      문화녹지국 공원녹지과\n","Name: dept, Length: 5468, dtype: object"]},"metadata":{},"execution_count":66}]},{"cell_type":"code","source":["from keras.utils import to_categorical\n","y_train_oh = to_categorical(y_train_le)\n","y_test_oh = to_categorical(y_test_le)"],"metadata":{"id":"AXecQijEfACq"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 모델 1"],"metadata":{"id":"l2D3fHm4Zn35"}},{"cell_type":"code","source":["train_data_vecs.shape, y_train_oh.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sK_1Dpjgab_e","executionInfo":{"status":"ok","timestamp":1682767221062,"user_tz":-540,"elapsed":322,"user":{"displayName":"김근영","userId":"15518782436185757366"}},"outputId":"c30168d5-601a-4b0c-c94c-aba1ed4168b0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((5468, 1000), (5468, 12))"]},"metadata":{},"execution_count":80}]},{"cell_type":"code","source":["import tensorflow as tf\n","from tensorflow import keras\n","from tensorflow.keras.layers import Input, Embedding, Conv1D, GlobalMaxPooling1D, Dense, Dropout\n","from tensorflow.keras.layers import Concatenate, Add, Flatten, LSTM, Bidirectional"],"metadata":{"id":"I0vtGcTGcvK3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["embedding_dim = 128\n","tf.keras.backend.clear_session()\n","# 입력 레이어 정의\n","input_layer = Input(shape=(1000,), name='input_layer')\n","\n","# 임베딩 레이어\n","embedding_layer = Embedding(input_dim=10000, output_dim=embedding_dim, input_length=1000)(input_layer)\n","\n","# Conv1D 레이어\n","conv1d_layer = Conv1D(filters=32, kernel_size=3, activation='relu')(embedding_layer)\n","\n","# LSTM 레이어\n","lstm_layer = LSTM(units=32, activation='tanh')(conv1d_layer)\n","\n","# Dense 레이어\n","dense_layer = Dense(units=16, activation='relu')(lstm_layer)\n","\n","# 출력 레이어\n","output_layer = Dense(12, activation='softmax')(dense_layer)\n","\n","# 모델 정의\n","d_model_1 = tf.keras.models.Model(inputs=input_layer, outputs=output_layer)\n","\n","# 모델 컴파일\n","d_model_1.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])"],"metadata":{"id":"X9S-ITdnZqFl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["d_model_1.fit(train_data_vecs, y_train_oh, epochs=1000, validation_split=0.2, verbose =1, callbacks=[es])\n","# batch_size=1024, # 일반적으로 이렇게 크게 주진 않는다."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UCfHWqY8dZHK","executionInfo":{"status":"ok","timestamp":1682767586048,"user_tz":-540,"elapsed":84150,"user":{"displayName":"김근영","userId":"15518782436185757366"}},"outputId":"ab0dbfa2-4b4a-4a69-9840-eda86f2f6d98"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/1000\n","137/137 [==============================] - 9s 36ms/step - loss: 2.2427 - accuracy: 0.1779 - val_loss: 2.1975 - val_accuracy: 0.2139\n","Epoch 2/1000\n","137/137 [==============================] - 4s 29ms/step - loss: 2.1814 - accuracy: 0.2071 - val_loss: 2.1857 - val_accuracy: 0.2139\n","Epoch 3/1000\n","137/137 [==============================] - 5s 36ms/step - loss: 2.1787 - accuracy: 0.2071 - val_loss: 2.1817 - val_accuracy: 0.2139\n","Epoch 4/1000\n","137/137 [==============================] - 4s 31ms/step - loss: 2.1782 - accuracy: 0.2071 - val_loss: 2.1848 - val_accuracy: 0.2139\n","Epoch 5/1000\n","137/137 [==============================] - 4s 31ms/step - loss: 2.1770 - accuracy: 0.2071 - val_loss: 2.1844 - val_accuracy: 0.2139\n","Epoch 6/1000\n","137/137 [==============================] - 5s 37ms/step - loss: 2.1780 - accuracy: 0.2071 - val_loss: 2.1835 - val_accuracy: 0.2139\n","Epoch 7/1000\n","137/137 [==============================] - 4s 29ms/step - loss: 2.1778 - accuracy: 0.2071 - val_loss: 2.1804 - val_accuracy: 0.2139\n","Epoch 8/1000\n","137/137 [==============================] - 4s 31ms/step - loss: 2.1775 - accuracy: 0.2071 - val_loss: 2.1784 - val_accuracy: 0.2139\n","Epoch 9/1000\n","137/137 [==============================] - 5s 37ms/step - loss: 2.1776 - accuracy: 0.2071 - val_loss: 2.1822 - val_accuracy: 0.2139\n","Epoch 10/1000\n","137/137 [==============================] - 4s 29ms/step - loss: 2.1773 - accuracy: 0.2071 - val_loss: 2.1848 - val_accuracy: 0.2139\n","Epoch 11/1000\n","137/137 [==============================] - 4s 29ms/step - loss: 2.1777 - accuracy: 0.2026 - val_loss: 2.1817 - val_accuracy: 0.2139\n","Epoch 12/1000\n","137/137 [==============================] - 5s 37ms/step - loss: 2.1775 - accuracy: 0.2071 - val_loss: 2.1811 - val_accuracy: 0.2139\n","Epoch 13/1000\n","137/137 [==============================] - 4s 30ms/step - loss: 2.1782 - accuracy: 0.2071 - val_loss: 2.1788 - val_accuracy: 0.2139\n","Epoch 14/1000\n","137/137 [==============================] - 4s 29ms/step - loss: 2.1772 - accuracy: 0.2071 - val_loss: 2.1794 - val_accuracy: 0.2139\n","Epoch 15/1000\n","137/137 [==============================] - 5s 36ms/step - loss: 2.1770 - accuracy: 0.2071 - val_loss: 2.1817 - val_accuracy: 0.2139\n","Epoch 16/1000\n","137/137 [==============================] - 4s 30ms/step - loss: 2.1770 - accuracy: 0.2071 - val_loss: 2.1825 - val_accuracy: 0.2139\n","Epoch 17/1000\n","137/137 [==============================] - 4s 29ms/step - loss: 2.1775 - accuracy: 0.2071 - val_loss: 2.1791 - val_accuracy: 0.2139\n","Epoch 18/1000\n","137/137 [==============================] - 5s 36ms/step - loss: 2.1769 - accuracy: 0.2071 - val_loss: 2.1841 - val_accuracy: 0.2139\n","Epoch 18: early stopping\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7f79b849fc40>"]},"metadata":{},"execution_count":85}]},{"cell_type":"markdown","source":["### 모델 2"],"metadata":{"id":"RcOFU6wrwTsL"}},{"cell_type":"code","source":["import tensorflow as tf\n","from tensorflow import keras\n","\n","from tensorflow.keras.layers import Dense, Flatten, Conv1D, MaxPool1D\n","from tensorflow.keras.layers import Embedding, Bidirectional, LSTM, SimpleRNN, GRU\n","\n","from tensorflow.keras.models import Sequential"],"metadata":{"id":"C4EsaS4xeifu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["keras.backend.clear_session()\n","\n","d_model_2 = Sequential()\n","\n","d_model_2.add( keras.layers.Input(shape=(1000,)) )\n","\n","d_model_2.add(Embedding( 15000, 128, input_length=1000 ))\n","\n","d_model_2.add(Conv1D(128, 5, activation='swish'))\n","forward_layer = LSTM(48, return_sequences=True )\n","backward_layer = GRU(48, return_sequences=True, go_backwards=True)\n","d_model_2.add(Bidirectional(forward_layer, backward_layer=backward_layer))\n","d_model_2.add(Bidirectional(GRU(64, return_sequences=True)))\n","d_model_2.add(Flatten())\n","d_model_2.add(Dense(1024, activation='swish'))\n","d_model_2.add(Dense(1024, activation='swish'))\n","d_model_2.add(Dense(12, activation='softmax'))\n","\n","d_model_2.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])"],"metadata":{"id":"IeI2q1TbxQ6L"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["d_model_2.fit(train_data_vecs, y_train_oh, epochs=1000, validation_split=0.2, verbose =1, callbacks=[es])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JmgVKbvZyUzO","executionInfo":{"status":"ok","timestamp":1682773079049,"user_tz":-540,"elapsed":682583,"user":{"displayName":"김근영","userId":"15518782436185757366"}},"outputId":"60f41ec7-6524-4897-c4d1-b60f627f3472"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/1000\n","137/137 [==============================] - 31s 160ms/step - loss: 2.4213 - accuracy: 0.1898 - val_loss: 2.2024 - val_accuracy: 0.1682\n","Epoch 2/1000\n","137/137 [==============================] - 20s 147ms/step - loss: 2.2144 - accuracy: 0.1854 - val_loss: 2.2338 - val_accuracy: 0.1563\n","Epoch 3/1000\n","137/137 [==============================] - 20s 143ms/step - loss: 2.2133 - accuracy: 0.1815 - val_loss: 2.1895 - val_accuracy: 0.2139\n","Epoch 4/1000\n","137/137 [==============================] - 21s 154ms/step - loss: 2.2179 - accuracy: 0.1934 - val_loss: 2.1983 - val_accuracy: 0.2139\n","Epoch 5/1000\n","137/137 [==============================] - 20s 144ms/step - loss: 2.2096 - accuracy: 0.1907 - val_loss: 2.2142 - val_accuracy: 0.1682\n","Epoch 6/1000\n","137/137 [==============================] - 20s 146ms/step - loss: 2.3757 - accuracy: 0.1799 - val_loss: 2.3102 - val_accuracy: 0.2139\n","Epoch 7/1000\n","137/137 [==============================] - 21s 151ms/step - loss: 2.2169 - accuracy: 0.1911 - val_loss: 2.2004 - val_accuracy: 0.2139\n","Epoch 8/1000\n","137/137 [==============================] - 20s 144ms/step - loss: 2.2022 - accuracy: 0.1941 - val_loss: 2.2013 - val_accuracy: 0.2139\n","Epoch 9/1000\n","137/137 [==============================] - 21s 150ms/step - loss: 2.2039 - accuracy: 0.1971 - val_loss: 2.1827 - val_accuracy: 0.2139\n","Epoch 10/1000\n","137/137 [==============================] - 21s 151ms/step - loss: 2.1909 - accuracy: 0.1984 - val_loss: 2.1892 - val_accuracy: 0.2139\n","Epoch 11/1000\n","137/137 [==============================] - 20s 148ms/step - loss: 2.1871 - accuracy: 0.2019 - val_loss: 2.1862 - val_accuracy: 0.2139\n","Epoch 12/1000\n","137/137 [==============================] - 21s 151ms/step - loss: 2.1885 - accuracy: 0.1920 - val_loss: 2.1982 - val_accuracy: 0.1682\n","Epoch 13/1000\n","137/137 [==============================] - 21s 154ms/step - loss: 2.1869 - accuracy: 0.1946 - val_loss: 2.1793 - val_accuracy: 0.2139\n","Epoch 14/1000\n","137/137 [==============================] - 20s 144ms/step - loss: 2.1908 - accuracy: 0.1968 - val_loss: 2.1832 - val_accuracy: 0.2139\n","Epoch 15/1000\n","137/137 [==============================] - 20s 147ms/step - loss: 2.1980 - accuracy: 0.1870 - val_loss: 2.1836 - val_accuracy: 0.2139\n","Epoch 16/1000\n","137/137 [==============================] - 21s 151ms/step - loss: 2.1847 - accuracy: 0.2048 - val_loss: 2.1811 - val_accuracy: 0.2139\n","Epoch 17/1000\n","137/137 [==============================] - 20s 145ms/step - loss: 2.1827 - accuracy: 0.2060 - val_loss: 2.1910 - val_accuracy: 0.2139\n","Epoch 18/1000\n","137/137 [==============================] - 21s 151ms/step - loss: 2.1830 - accuracy: 0.2035 - val_loss: 2.1924 - val_accuracy: 0.1490\n","Epoch 19/1000\n","137/137 [==============================] - 21s 152ms/step - loss: 2.1843 - accuracy: 0.2012 - val_loss: 2.1833 - val_accuracy: 0.2139\n","Epoch 20/1000\n","137/137 [==============================] - 20s 148ms/step - loss: 2.1820 - accuracy: 0.2042 - val_loss: 2.1823 - val_accuracy: 0.2139\n","Epoch 21/1000\n","137/137 [==============================] - 20s 143ms/step - loss: 2.1795 - accuracy: 0.2071 - val_loss: 2.1802 - val_accuracy: 0.2139\n","Epoch 22/1000\n","137/137 [==============================] - 20s 148ms/step - loss: 2.1779 - accuracy: 0.2071 - val_loss: 2.1806 - val_accuracy: 0.2139\n","Epoch 23/1000\n","137/137 [==============================] - 21s 151ms/step - loss: 2.1791 - accuracy: 0.2071 - val_loss: 2.1781 - val_accuracy: 0.2139\n","Epoch 24/1000\n","137/137 [==============================] - 20s 146ms/step - loss: 2.1782 - accuracy: 0.2071 - val_loss: 2.1839 - val_accuracy: 0.2139\n","Epoch 25/1000\n","137/137 [==============================] - 21s 151ms/step - loss: 2.1779 - accuracy: 0.2071 - val_loss: 2.1792 - val_accuracy: 0.2139\n","Epoch 26/1000\n","137/137 [==============================] - 20s 146ms/step - loss: 2.1784 - accuracy: 0.2071 - val_loss: 2.1818 - val_accuracy: 0.2139\n","Epoch 27/1000\n","137/137 [==============================] - 20s 145ms/step - loss: 2.1787 - accuracy: 0.2023 - val_loss: 2.1830 - val_accuracy: 0.2139\n","Epoch 28/1000\n","137/137 [==============================] - 20s 146ms/step - loss: 2.1781 - accuracy: 0.2071 - val_loss: 2.1797 - val_accuracy: 0.2139\n","Epoch 29/1000\n","137/137 [==============================] - 21s 151ms/step - loss: 2.1780 - accuracy: 0.2071 - val_loss: 2.1810 - val_accuracy: 0.2139\n","Epoch 30/1000\n","137/137 [==============================] - 21s 153ms/step - loss: 2.1780 - accuracy: 0.2071 - val_loss: 2.1844 - val_accuracy: 0.2139\n","Epoch 31/1000\n","137/137 [==============================] - 21s 150ms/step - loss: 2.1779 - accuracy: 0.2071 - val_loss: 2.1848 - val_accuracy: 0.2139\n","Epoch 32/1000\n","137/137 [==============================] - 21s 151ms/step - loss: 2.1781 - accuracy: 0.2071 - val_loss: 2.1819 - val_accuracy: 0.2139\n","Epoch 33/1000\n","137/137 [==============================] - 21s 151ms/step - loss: 2.1778 - accuracy: 0.2071 - val_loss: 2.1826 - val_accuracy: 0.2139\n","Epoch 33: early stopping\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7f799026ff70>"]},"metadata":{},"execution_count":98}]},{"cell_type":"code","source":["d_model_2.evaluate(test_data_vecs, y_test_oh)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oHISMLfrzwyF","executionInfo":{"status":"ok","timestamp":1682773088188,"user_tz":-540,"elapsed":9149,"user":{"displayName":"김근영","userId":"15518782436185757366"}},"outputId":"8bc05243-85d6-4834-e22c-44d6c61d349c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["43/43 [==============================] - 2s 49ms/step - loss: 2.1763 - accuracy: 0.2083\n"]},{"output_type":"execute_result","data":{"text/plain":["[2.1762657165527344, 0.2083333283662796]"]},"metadata":{},"execution_count":99}]},{"cell_type":"markdown","source":["### 모델 3"],"metadata":{"id":"hLc0cFE8zw45"}},{"cell_type":"code","source":["import tensorflow as tf\n","from tensorflow import keras\n","\n","from tensorflow.keras.layers import Input, Dense, Flatten, Conv1D, MaxPool1D\n","from tensorflow.keras.layers import Embedding, Bidirectional, LSTM, SimpleRNN, GRU\n","\n","from tensorflow.keras.models import Sequential"],"metadata":{"id":"StTzUdmtz6XT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["keras.backend.clear_session()\n","\n","d_model_3 = Sequential()\n","\n","#d_model_3.add(Embedding(input_dim = 1000, 128, input_length=1000 ))\n","#d_model_3.add(Embedding(input_dim = 1000, 128, input_length=1000))\n","d_model_3.add(Embedding(input_dim=1000, output_dim=128, input_length=1000))\n","\n","\n","d_model_3.add(Conv1D(64, kernel_size=5, activation='relu'))\n","d_model_3.add(MaxPool1D(pool_size=2))\n","\n","d_model_3.add(Conv1D(128, kernel_size=5, activation='relu'))\n","d_model_3.add(MaxPool1D(pool_size=2))\n","\n","d_model_3.add(Conv1D(64, kernel_size=5, activation='relu'))\n","d_model_3.add(MaxPool1D(pool_size=2))\n","\n","d_model_3.add(Flatten())\n","d_model_3.add(Dense(64, activation='relu'))\n","d_model_3.add(Dense(32, activation='relu'))\n","\n","d_model_3.add(Dense(12, activation='softmax'))\n","\n","d_model_3.compile(loss='categorical_crossentropy', metrics=['accuracy'], optimizer='adam')\n"],"metadata":{"id":"Qi1WP8iPzxxm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["d_model_3.fit(train_data_vecs_pd, y_train_oh, epochs=1000, validation_split=0.2, verbose =1, callbacks=[es])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zSYIhJMBDW92","executionInfo":{"status":"ok","timestamp":1682776164143,"user_tz":-540,"elapsed":41136,"user":{"displayName":"김근영","userId":"15518782436185757366"}},"outputId":"414bba8f-21cc-41d5-ef1a-34e36f8588d5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/1000\n","137/137 [==============================] - 2s 14ms/step - loss: 2.1790 - accuracy: 0.2071 - val_loss: 2.1805 - val_accuracy: 0.2139\n","Epoch 2/1000\n","137/137 [==============================] - 2s 12ms/step - loss: 2.1802 - accuracy: 0.2071 - val_loss: 2.1880 - val_accuracy: 0.2139\n","Epoch 3/1000\n","137/137 [==============================] - 2s 11ms/step - loss: 2.1792 - accuracy: 0.2071 - val_loss: 2.1811 - val_accuracy: 0.2139\n","Epoch 4/1000\n","137/137 [==============================] - 1s 11ms/step - loss: 2.1790 - accuracy: 0.2071 - val_loss: 2.1847 - val_accuracy: 0.2139\n","Epoch 5/1000\n","137/137 [==============================] - 2s 11ms/step - loss: 2.1806 - accuracy: 0.2071 - val_loss: 2.1803 - val_accuracy: 0.2139\n","Epoch 6/1000\n","137/137 [==============================] - 2s 12ms/step - loss: 2.1783 - accuracy: 0.2071 - val_loss: 2.1860 - val_accuracy: 0.2139\n","Epoch 7/1000\n","137/137 [==============================] - 2s 13ms/step - loss: 2.1790 - accuracy: 0.2071 - val_loss: 2.1840 - val_accuracy: 0.2139\n","Epoch 8/1000\n","137/137 [==============================] - 2s 11ms/step - loss: 2.1787 - accuracy: 0.2071 - val_loss: 2.1805 - val_accuracy: 0.2139\n","Epoch 9/1000\n","137/137 [==============================] - 2s 11ms/step - loss: 2.1780 - accuracy: 0.2071 - val_loss: 2.1826 - val_accuracy: 0.2139\n","Epoch 10/1000\n","137/137 [==============================] - 2s 11ms/step - loss: 2.1778 - accuracy: 0.2071 - val_loss: 2.1812 - val_accuracy: 0.2139\n","Epoch 11/1000\n","137/137 [==============================] - 2s 11ms/step - loss: 2.1765 - accuracy: 0.2071 - val_loss: 2.1800 - val_accuracy: 0.2139\n","Epoch 12/1000\n","137/137 [==============================] - 2s 11ms/step - loss: 2.1783 - accuracy: 0.2071 - val_loss: 2.1816 - val_accuracy: 0.2139\n","Epoch 13/1000\n","137/137 [==============================] - 2s 11ms/step - loss: 2.1783 - accuracy: 0.2071 - val_loss: 2.1811 - val_accuracy: 0.2139\n","Epoch 14/1000\n","137/137 [==============================] - 2s 13ms/step - loss: 2.1782 - accuracy: 0.2071 - val_loss: 2.1805 - val_accuracy: 0.2139\n","Epoch 15/1000\n","137/137 [==============================] - 2s 14ms/step - loss: 2.1782 - accuracy: 0.2071 - val_loss: 2.1794 - val_accuracy: 0.2139\n","Epoch 16/1000\n","137/137 [==============================] - 2s 12ms/step - loss: 2.1791 - accuracy: 0.2071 - val_loss: 2.1804 - val_accuracy: 0.2139\n","Epoch 17/1000\n","137/137 [==============================] - 2s 11ms/step - loss: 2.1770 - accuracy: 0.2071 - val_loss: 2.1812 - val_accuracy: 0.2139\n","Epoch 18/1000\n","137/137 [==============================] - 2s 11ms/step - loss: 2.1769 - accuracy: 0.2071 - val_loss: 2.1805 - val_accuracy: 0.2139\n","Epoch 19/1000\n","137/137 [==============================] - 1s 11ms/step - loss: 2.1778 - accuracy: 0.2071 - val_loss: 2.1812 - val_accuracy: 0.2139\n","Epoch 20/1000\n","137/137 [==============================] - 2s 11ms/step - loss: 2.1776 - accuracy: 0.2071 - val_loss: 2.1816 - val_accuracy: 0.2139\n","Epoch 21/1000\n","137/137 [==============================] - 1s 11ms/step - loss: 2.1773 - accuracy: 0.2071 - val_loss: 2.1820 - val_accuracy: 0.2139\n","Epoch 22/1000\n","137/137 [==============================] - 2s 12ms/step - loss: 2.1765 - accuracy: 0.2071 - val_loss: 2.1822 - val_accuracy: 0.2139\n","Epoch 23/1000\n","137/137 [==============================] - 2s 14ms/step - loss: 2.1767 - accuracy: 0.2071 - val_loss: 2.1814 - val_accuracy: 0.2139\n","Epoch 24/1000\n","137/137 [==============================] - 2s 12ms/step - loss: 2.1775 - accuracy: 0.2071 - val_loss: 2.1826 - val_accuracy: 0.2139\n","Epoch 25/1000\n","137/137 [==============================] - 2s 11ms/step - loss: 2.1779 - accuracy: 0.2071 - val_loss: 2.1817 - val_accuracy: 0.2139\n","Epoch 25: early stopping\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7f79babd6dd0>"]},"metadata":{},"execution_count":121}]},{"cell_type":"code","source":["d_model_3.evaluate(test_data_vecs_pd, y_test_oh)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EqLYrdm_DbUh","executionInfo":{"status":"ok","timestamp":1682776164689,"user_tz":-540,"elapsed":557,"user":{"displayName":"김근영","userId":"15518782436185757366"}},"outputId":"3512c62e-6548-4513-e0cd-c9aefec1eaa9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["43/43 [==============================] - 0s 4ms/step - loss: 2.1759 - accuracy: 0.2083\n"]},{"output_type":"execute_result","data":{"text/plain":["[2.1758830547332764, 0.2083333283662796]"]},"metadata":{},"execution_count":122}]},{"cell_type":"markdown","source":["### 모델 4"],"metadata":{"id":"FJvVMy-qP-64"}},{"cell_type":"code","source":["import tensorflow as tf\n","from tensorflow import keras\n","\n","from tensorflow.keras.layers import Input, Dense, Flatten, Conv1D, MaxPool1D\n","from tensorflow.keras.layers import Embedding, Bidirectional, LSTM, SimpleRNN, GRU\n","\n","from tensorflow.keras.models import Sequential"],"metadata":{"id":"xUimh1YlQA_F"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["keras.backend.clear_session()\n","\n","d_model_4 = Sequential()\n","\n","d_model_4.add(Embedding( 1000, 128, input_length=1000 ))\n","\n","d_model_4.add(Conv1D(128, 5, activation='relu'))\n","forward_layer = LSTM(48, return_sequences=True )\n","backward_layer = GRU(48, return_sequences=True, go_backwards=True)\n","d_model_4.add(Bidirectional(forward_layer, backward_layer=backward_layer))\n","d_model_4.add(Bidirectional(GRU(64, return_sequences=True)))\n","d_model_4.add(Flatten())\n","d_model_4.add(Dense(1024, activation='relu'))\n","d_model_4.add(Dense(1024, activation='relu'))\n","d_model_4.add(Dense(12, activation='softmax'))\n","\n","d_model_4.compile(loss='categorical_crossentropy', metrics=['accuracy'], optimizer='adam')\n"],"metadata":{"id":"iW17K6R2QCsg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["d_model_4.fit(train_data_vecs_pd, y_train_oh, epochs=1000, validation_split=0.2, verbose =1, callbacks=[es], batch_size=256)\n","d_model_4.evaluate(test_data_vecs_pd, y_test_oh)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tqs_grs1Qeqj","executionInfo":{"status":"ok","timestamp":1682776749657,"user_tz":-540,"elapsed":147783,"user":{"displayName":"김근영","userId":"15518782436185757366"}},"outputId":"51850c34-e56c-42d3-b608-ece225d62c59"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/1000\n","18/18 [==============================] - 9s 312ms/step - loss: 2.1847 - accuracy: 0.1989 - val_loss: 2.1825 - val_accuracy: 0.2139\n","Epoch 2/1000\n","18/18 [==============================] - 6s 310ms/step - loss: 2.1830 - accuracy: 0.2071 - val_loss: 2.1839 - val_accuracy: 0.2139\n","Epoch 3/1000\n","18/18 [==============================] - 6s 312ms/step - loss: 2.1782 - accuracy: 0.2071 - val_loss: 2.1869 - val_accuracy: 0.2139\n","Epoch 4/1000\n","18/18 [==============================] - 6s 322ms/step - loss: 2.1807 - accuracy: 0.2071 - val_loss: 2.1805 - val_accuracy: 0.2139\n","Epoch 5/1000\n","18/18 [==============================] - 6s 318ms/step - loss: 2.1811 - accuracy: 0.2071 - val_loss: 2.1819 - val_accuracy: 0.2139\n","Epoch 6/1000\n","18/18 [==============================] - 6s 316ms/step - loss: 2.1794 - accuracy: 0.1927 - val_loss: 2.1830 - val_accuracy: 0.2139\n","Epoch 7/1000\n","18/18 [==============================] - 6s 325ms/step - loss: 2.1816 - accuracy: 0.2071 - val_loss: 2.1845 - val_accuracy: 0.2139\n","Epoch 8/1000\n","18/18 [==============================] - 6s 325ms/step - loss: 2.1799 - accuracy: 0.2071 - val_loss: 2.1861 - val_accuracy: 0.2139\n","Epoch 9/1000\n","18/18 [==============================] - 6s 323ms/step - loss: 2.1817 - accuracy: 0.2010 - val_loss: 2.1817 - val_accuracy: 0.2139\n","Epoch 10/1000\n","18/18 [==============================] - 6s 314ms/step - loss: 2.1802 - accuracy: 0.2071 - val_loss: 2.1905 - val_accuracy: 0.2139\n","Epoch 11/1000\n","18/18 [==============================] - 6s 309ms/step - loss: 2.1813 - accuracy: 0.1941 - val_loss: 2.1930 - val_accuracy: 0.2139\n","Epoch 12/1000\n","18/18 [==============================] - 6s 320ms/step - loss: 2.1891 - accuracy: 0.1955 - val_loss: 2.1859 - val_accuracy: 0.2139\n","Epoch 13/1000\n","18/18 [==============================] - 6s 308ms/step - loss: 2.1807 - accuracy: 0.1975 - val_loss: 2.1874 - val_accuracy: 0.2139\n","Epoch 14/1000\n","18/18 [==============================] - 6s 308ms/step - loss: 2.1795 - accuracy: 0.2071 - val_loss: 2.1792 - val_accuracy: 0.2139\n","Epoch 15/1000\n","18/18 [==============================] - 6s 319ms/step - loss: 2.1787 - accuracy: 0.2071 - val_loss: 2.1820 - val_accuracy: 0.2139\n","Epoch 16/1000\n","18/18 [==============================] - 6s 318ms/step - loss: 2.1826 - accuracy: 0.2071 - val_loss: 2.1825 - val_accuracy: 0.2139\n","Epoch 17/1000\n","18/18 [==============================] - 6s 310ms/step - loss: 2.1802 - accuracy: 0.2071 - val_loss: 2.1824 - val_accuracy: 0.2139\n","Epoch 18/1000\n","18/18 [==============================] - 6s 319ms/step - loss: 2.1810 - accuracy: 0.2071 - val_loss: 2.1885 - val_accuracy: 0.2139\n","Epoch 19/1000\n","18/18 [==============================] - 6s 320ms/step - loss: 2.1807 - accuracy: 0.2071 - val_loss: 2.1844 - val_accuracy: 0.2139\n","Epoch 20/1000\n","18/18 [==============================] - 6s 322ms/step - loss: 2.1810 - accuracy: 0.2071 - val_loss: 2.1842 - val_accuracy: 0.2139\n","Epoch 21/1000\n","18/18 [==============================] - 6s 322ms/step - loss: 2.1797 - accuracy: 0.2071 - val_loss: 2.1873 - val_accuracy: 0.2139\n","Epoch 22/1000\n","18/18 [==============================] - 6s 313ms/step - loss: 2.1820 - accuracy: 0.2071 - val_loss: 2.1873 - val_accuracy: 0.2139\n","Epoch 23/1000\n","18/18 [==============================] - 6s 312ms/step - loss: 2.1796 - accuracy: 0.2071 - val_loss: 2.1835 - val_accuracy: 0.2139\n","Epoch 24/1000\n","18/18 [==============================] - 6s 312ms/step - loss: 2.1801 - accuracy: 0.2071 - val_loss: 2.1809 - val_accuracy: 0.2139\n","Epoch 24: early stopping\n","43/43 [==============================] - 2s 49ms/step - loss: 2.1756 - accuracy: 0.2083\n"]},{"output_type":"execute_result","data":{"text/plain":["[2.1755526065826416, 0.2083333283662796]"]},"metadata":{},"execution_count":129}]}]}